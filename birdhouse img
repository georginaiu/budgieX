<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    .birdhouse-wrapper {
      position: relative; /* This acts as the positioning context for absolute children */
      width: 300px; /* Width of the wrapper */
      top: 120px;
      margin: 20px auto;
      transform: scale(1.5); /* Scales everything inside the wrapper by 2x */
      transform-origin: center; /* Ensures scaling happens from the center */
    }

    .birdhouse {
      width: 100%; /* Ensures the image fits the wrapper */
    }

    /* Circular button */
    .circle-button {
      position: absolute; /* Absolute positioning allows overlaying */
      top: 20px; /* Adjust based on the image position */
      left: 50%; /* Center horizontally */
      transform: translateX(-50%);
      width: 20px; /* Width of the circle */
      height: 20px; /* Height of the circle */
      background-color: white; /* Sets the background to white */
      border-radius: 50%; /* Makes it a circle */
      cursor: pointer; 
      display: flex; /* Enables centering text */
      align-items: center; /* Vertically centers text */
      justify-content: center; /* Horizontally centers text */
    }

    /* Text on circle button */
    .circle-button span {
      font-size: 10px; /* Sets the text size to 10px */
      color: black; /* Keeps the text color black */
      font-weight: bold;
    }

    /* Circular entrance */
    .entrance {
      position: absolute; /* Absolute positioning allows overlaying */
      top: 240px; /* Position over the image */
      left: 50%; /* Center horizontally */
      transform: translateX(-50%);
      width: 40px;
      height: 40px;
      border-radius: 50%; /* Makes it circular */
      display: flex; /* Enables centering text */
      align-items: center; /* Vertically centers text */
      justify-content: center; /* Horizontally centers text */
      font-size: 12px;
      font-weight: bold;
      color: white;
      background-color: transparent; /* Ensures visibility */
    }
  </style>
</head>
<body>
  <div class="birdhouse-wrapper">
    <!-- Birdhouse image -->
    <img src="birdhouse.jpeg" alt="Birdhouse Image" class="birdhouse">

    <!-- Circular button -->
    <div class="circle-button" onclick="accumulateEntrance()">
      <span>+Savings</span>
    </div>

    <!-- Circular entrance -->
    <div class="entrance" id="entrance">$0</div>
  </div>

  <script>
    let total = 0; // Initialize a running total

    function accumulateEntrance() {
      const userInput = prompt("Enter a value to add to savings:");
      const parsedValue = parseFloat(userInput); // Parse the input as a number

      if (!isNaN(parsedValue) && parsedValue > 0) { // Validate the input
        total += parsedValue; // Accumulate the total
        document.getElementById("entrance").innerText = `$${total}`; // Update the display
      } else {
        alert("Please enter a valid positive number!");
      }
    }
  </script>
</body>
</html>
